---
name: build container

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:
    inputs:
      PG_VERSION:
        description: "Postgres version"
        required: false
        default: "17.5"
      EXTENSIONS:
        description: "Postgres extensions to install"
        required: false
        default: "vchord"
      TIMESCALEDB_VERSION:
        description: "TimescaleDB version"
        required: false
        default: "2.20.4"

env:
  DEFAULT_PG_VERSION: "17.5"
  DEFAULT_EXTENSIONS: "vchord"
  DEFAULT_TIMESCALEDB_VERSION: "2.20.3"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: docker/setup-buildx-action@v2

      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: set vchord version
        id: vchord-ver
        run: |
          echo "VCHORD_VER=$(curl -sL -o /dev/null -w '%{url_effective}' https://github.com/tensorchord/VectorChord/releases/latest | awk -F/ '{print $NF}' | sed 's/\.//g')" >> $GITHUB_OUTPUT

      - name: calculate image tag
        id: vars
        run: |
          # Determine trigger type and set values accordingly
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            PG_VERSION="${{ github.event.inputs.PG_VERSION || env.DEFAULT_PG_VERSION }}"
            EXTENSIONS_RAW="${{ github.event.inputs.EXTENSIONS || env.DEFAULT_EXTENSIONS }}"
            TIMESCALEDB_VERSION="${{ github.event.inputs.TIMESCALEDB_VERSION || env.DEFAULT_TIMESCALEDB_VERSION }}"
          else
            PG_VERSION="${{ env.DEFAULT_PG_VERSION }}"
            EXTENSIONS_RAW="${{ env.DEFAULT_EXTENSIONS }}"
            TIMESCALEDB_VERSION="${{ env.DEFAULT_TIMESCALEDB_VERSION }}"
          fi

          # Order extensions alphabetically and clean trailing space
          EXTENSIONS=$(echo "$EXTENSIONS_RAW" | tr ' ' '\n' | sort | tr '\n' ' ')
          EXTENSIONS=$(echo "$EXTENSIONS" | sed 's/ $//g')

          # Replace extensions with versioned variants
          EXTENSIONS=$(echo "$EXTENSIONS" | sed "s/timescaledb/timescaledb-${TIMESCALEDB_VERSION}/g" | sed "s/ /-/g")
          EXTENSIONS=$(echo "$EXTENSIONS" | sed "s/vchord/vchord${{ steps.vchord-ver.outputs.VCHORD_VER }}/g")

          echo "IMAGE_TAG=pg${PG_VERSION}-${EXTENSIONS}" >> $GITHUB_OUTPUT
          echo "PG_VERSION=$PG_VERSION" >> $GITHUB_ENV
          echo "EXTENSIONS_RAW=$EXTENSIONS_RAW" >> $GITHUB_ENV
          echo "TIMESCALEDB_VERSION=$TIMESCALEDB_VERSION" >> $GITHUB_ENV

      - uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/postgresql:${{ steps.vars.outputs.IMAGE_TAG }}
          build-args: |
            POSTGRESQL_VERSION=${{ env.PG_VERSION }}
            EXTENSIONS=${{ env.EXTENSIONS_RAW }}
            TIMESCALEDB_VERSION=${{ env.TIMESCALEDB_VERSION }}
